{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.elements, element => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: element.id\n    }, [_createTextVNode(_toDisplayString(element.nom) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.supprimerElement(element.id)\n    }, \"Supprimer\", 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","elements","element","key","id","_createTextVNode","_toDisplayString","nom","onClick","$event","$options","supprimerElement","_hoisted_1"],"sources":["/home/Vue/crud/src/components/ListeElements.vue"],"sourcesContent":["<!-- <template>\r\n  <div>\r\n    <ul>\r\n      <li v-for=\"element in elements\" :key=\"element.id\">\r\n        {{ element.nom }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>-->\r\n\r\n<template>\r\n    <div>\r\n      <ul>\r\n        <li v-for=\"element in elements\" :key=\"element.id\">\r\n          {{ element.nom }} <button @click=\"supprimerElement(element.id)\">Supprimer</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: 'ListeElements',\r\n  data() {\r\n    return {\r\n      elements: [{ id: 1, nom: 'Element 1' }, { id: 2, nom: 'Element 2' }]\r\n    }\r\n  },\r\n  methods: {\r\n    ajouterElement() {\r\n      const nouvelElement = { id: this.elements.length + 1, nom: 'Nouvel Element' };\r\n      this.elements.push(nouvelElement);\r\n    },\r\n    supprimerElement(id) {\r\n      this.elements = this.elements.filter(element => element.id !== id);\r\n    },\r\n    // Ajoutez ici les méthodes pour lire et mettre à jour si nécessaire\r\n  }\r\n}\r\n</script>"],"mappings":";mBAAA;;uBAWIA,mBAAA,CAMM,cALJC,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKE,SAAA,QAfbC,WAAA,CAa8BC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBN,mBAAA,CAEK;MAF4BO,GAAG,EAAED,OAAO,CAACE;QAbtDC,gBAAA,CAAAC,gBAAA,CAcaJ,OAAO,CAACK,GAAG,IAAG,GAAC,iBAAAV,mBAAA,CAAgE;MAAvDW,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,gBAAgB,CAACT,OAAO,CAACE,EAAE;OAAG,WAAS,iBAdnFQ,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}