{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.elements, element => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: element.id\n    }, [_createTextVNode(_toDisplayString(element.nom) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.supprimerElement(element.id)\n    }, \"Supprimer\", 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.ajouterElement && $options.ajouterElement(...args))\n  }, \"Ajouter un élément\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","elements","element","key","id","_createTextVNode","_toDisplayString","nom","onClick","$event","$options","supprimerElement","_hoisted_1","_cache","args","ajouterElement"],"sources":["/home/mikboss306/Stage/TP/vue-tp/src/components/ListeElements.vue"],"sourcesContent":["<template>\n    <div>\n      <ul>\n        <li v-for=\"element in elements\" :key=\"element.id\">\n          {{ element.nom }} <button @click=\"supprimerElement(element.id)\">Supprimer</button>\n        </li>\n      </ul>\n      <button @click=\"ajouterElement\">Ajouter un élément</button>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'ListeElements',\n    data() {\n      return {\n        elements: [{ id: 1, nom: 'Element 1' }, { id: 2, nom: 'Element 2' }]\n      };\n    },\n    methods: {\n      ajouterElement() {\n        const nouvelElement = { id: this.elements.length + 1, nom: `Element ${this.elements.length + 1}` };\n        this.elements.push(nouvelElement);\n      },\n      supprimerElement(id) {\n        this.elements = this.elements.filter(element => element.id !== id);\n      },\n    }\n  }\n  </script>  "],"mappings":";mBAAA;;uBACIA,mBAAA,CAOM,cANJC,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKE,SAAA,QALbC,WAAA,CAG8BC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBN,mBAAA,CAEK;MAF4BO,GAAG,EAAED,OAAO,CAACE;QAHtDC,gBAAA,CAAAC,gBAAA,CAIaJ,OAAO,CAACK,GAAG,IAAG,GAAC,iBAAAV,mBAAA,CAAgE;MAAvDW,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,gBAAgB,CAACT,OAAO,CAACE,EAAE;OAAG,WAAS,iBAJnFQ,UAAA,E;oCAOMf,mBAAA,CAA2D;IAAlDW,OAAK,EAAAK,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAK,cAAA,IAAAL,QAAA,CAAAK,cAAA,IAAAD,IAAA,CAAc;KAAE,oBAAkB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}