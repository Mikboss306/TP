{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.elements, element => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: element.id\n    }, _toDisplayString(element.nom), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","_ctx","elements","element","key","id","nom"],"sources":["/home/mikboss306/Stage/TP/vue-tp/src/components/ListeElements.vue"],"sourcesContent":["<template>\n    <div>\n      <ul>\n        <li v-for=\"element in elements\" :key=\"element.id\">\n          {{ element.nom }}\n        </li>\n      </ul>\n    </div>\n</template>\n  \n<script>\n    export default {\n    name: 'ListeElements',\n    data() {\n        return {\n        elements: [{ id: 1, nom: 'Element 1' }, { id: 2, nom: 'Element 2' }]\n        }\n        }\n    methods: {\n        ajouterElement() {\n        const nouvelElement = { id: this.elements.length + 1, nom: 'Nouvel Element' };\n        this.elements.push(nouvelElement);\n        },\n        supprimerElement(id) {\n        this.elements = this.elements.filter(element => element.id !== id);\n        },\n    }\n</script>\n  "],"mappings":";;uBACIA,mBAAA,CAMM,cALJC,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKE,SAAA,QALbC,WAAA,CAG8BC,IAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBN,mBAAA,CAEK;MAF4BO,GAAG,EAAED,OAAO,CAACE;wBACzCF,OAAO,CAACG,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}